include @SMP_BUILDDIR@/build/Makehead

# Directory where pkcs11_cryptopp headers are located
#
LFLAG1		= @SMP_LDFLAG@
PKCS11CRYPTOPP  = ../../pkcs11_cryptopp/inc
STAGINGDIR	= $(SMPDISTDIR)/lib
HASCRYPTOPP = @HasCryptoPP@

ifeq ($(RANLIB),)
RANLIB = echo
endif

ifeq ($(HASCRYPTOPP), yes)
       LIBPATH = -L$(CRYPTOPPLIBDIR) -L$(SMPDISTDIR)/lib
       LFLAG1 = @SMP_LDFLAG@

       ifdef CRYPTOPPDIR
       LIBPATH += -L$(CRYPTOPPDIR)/lib
       endif
       ifdef CRYPTOPPINCDIR
       INCLUDE += -I$(CRYPTOPPDIR)/include
       else
       INCLUDE += -I/usr/local/include/cryptopp
       endif
endif

## Specify the library name
ifeq ($(USEDEBUGLIB), no)
PKCS11CRYPTOPP_LIBS    = -lcryptopp
ifeq ($(ENABLESTATIC), no)
TARGET = $(STAGINGDIR)/libpkcs11_cryptopp.@SHEXT@
else
TARGET2= $(STAGINGDIR)/libpkcs11_cryptopp.a
endif
else
PKCS11CRYPTOPP_LIBS    = -lcryptopp 
ifeq ($(ENABLESTATIC), no)
TARGET = $(STAGINGDIR)/libpkcs11_cryptopp_d.@SHEXT@
else
TARGET2= $(STAGINGDIR)/libpkcs11_cryptopp_d.a
endif
endif


## Needed includes
INCLUDE       += -I$(PKCS11CRYPTOPP) -I$(CRYPTOPPINCDIR)

## Specify the sources
CSRCS	      = $(wildcard *.c)
CPPSRCS       = $(wildcard *.cpp) 
COBJS         = $(CSRCS:.c=.o) 	
CPPOBJS       = $(CPPSRCS:.cpp=.o) 
OBJS			  = $(CPPOBJS) $(COBJS)

# Compiler information 
CC            = @CC@
CXX           = @CXX@
CPP	     =  @CPP@

LIBPATH += -L$(STAGINGDIR)
LIBS += $(PKCS11CRYPTOPP_LIBS) @LIBS@

DEPENDENCIES = ../inc/cryptoki.h\
	       ../inc/p11cryptopp_internal.h\
	       ../inc/pkcs11f.h\
               ../inc/pkcs11.h\
               ../inc/pkcs11t.h

#determine what platform we are on
OS	= @OS@

# Add in the C Flags and C++ Flags
CFLAGS = @CFLAGS@ -D_UNIX
CXXFLAGS = @CXXFLAGS@ -D_UNIX

#
# End of Low Level specific make information
#

.SUFFIXES : .cpp .cpp.o 


all: $(COBJS) $(CPPOBJS) $(TARGET) $(TARGET2)

clean:
	rm -f *.o

$(CPPOBJS): $(DEPENDENCIES)
$(COBJS): $(DEPENDENCIES)

include $(top_builddir)/build/Maketail.in
